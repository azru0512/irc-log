21:10 < stefanha> bonzini: Would you be willing to run a QEMU win32 git-bisect?  The bug reporter doesn't have a build environment, they only used
                  qemu-1.2-rc1 binaries (maybe from Stefan Weil?).
21:11 < stefanha> There's a bug report about floppy and AMD PCnet regression for Windows NT 3.1 guest from 1.1->1.2-rc1.
21:11 < stefanha> https://bugs.launchpad.net/qemu/+bug/1042654
21:11 < bonzini> stefanha: i saw it, but who has windows nt 3.1?
21:11 < bonzini> stefanha: we could ask herve to test it on unix first
21:12 < stefanha> bonzini: You could provide the binaries to the bug reporter,
21:12 < stefanha> they tell you if they are good/bad,
21:12 < stefanha> ...bisect
21:12 < stefanha> I know it's a bit sucky but would be nice to find and fix those regressions.
21:12 < bonzini> that would take a while, wouldn't it? plus i don't know how they got 1.2-rc1 :/
21:12 < pm215> ...we might finish the bisection by the 1.3 release date :-)
21:12 < bonzini> trying to do it first in posix seems much more reasonable...
21:13 < stefanha> Hmm...I wonder if MSDN subscriptions provide access to Win NT 3.1 :D
21:13 < bonzini> i checked, it doesn't go that far back
21:13 < stefanha> crap
21:13 < bonzini> i got windows for workgroups 3.11 though :)
21:13 < stefanha> Ah, those were the days! :)
21:14 < bonzini> stefanha: let me check again, perhaps i was looking for windows 95
21:14 < stefanha> I'm guessing Stefan Weil built qemu 1.2-rc1 for Windows.
21:14  * stefanha checks
21:15 < stefanha> http://qemu.weilnetz.de/w32/2012-08-24/
21:17 < bonzini> stefanha: are you still at ibm?
21:17 < stefanha> bonzini: Yes, until Fri 31st August.
21:18 < mmu_man> WTF does U-Boot configure 4*64k + 64k of on chip RAM if it only uses 4k of it
21:21 < aliguori> kwolf2, ping
21:21 < kwolf2> aliguori: pong
21:21 < aliguori> kwolf, are you going to do a pull request for -rc2?
21:21 < aliguori> i saw you picked up a few patches from stefanha
21:21 < afaerber> stefanha: AMD PCnet> cc hpoussin on the bug? he did some testing I thought
21:22 < kwolf> aliguori: When do you need them?
21:22 < aliguori> kwolf, in the next 6 hours or so
21:21 < aliguori> i saw you picked up a few patches from stefanha
21:21 < afaerber> stefanha: AMD PCnet> cc hpoussin on the bug? he did some testing I thought
21:22 < kwolf> aliguori: When do you need them?
21:22 < aliguori> kwolf, in the next 6 hours or so
21:22 < kwolf> aliguori: Ok, I'll try to get them tested in time.
21:23 < aliguori> kwolf, thanks!
21:23 < stefanha> afaerber: Weird thing is, there haven't been any real changes in pcnet v1.1.0..v1.2.0-rc1
21:23 < stefanha> afaerber: thanks, I'll cc herve
21:24 < afaerber> stefanha, I remember there was a splitoff of a device version better suited for NT 3.x et al.
21:24 < bonzini> afaerber: that was pcscsi, not pcnet
21:24 < afaerber> something about an eprom - bonzini might know
21:24 < afaerber> ah, sorry then
21:24 < bonzini> stefanha: nothing available after 3.11 and before 2000 on msdn :(
21:25 < stefanha> bonzini: I replied asking the reporter if other guest OSes show this too.
21:42 < nareshbhat> hi
21:43 < nareshbhat> I guess "taskset 0x00000003 qemu-arm" uses #0 and #1 virtual CPUs is that right ?
21:51 < chenwj> stefanha: until Fri 31st August? are you leaveing ibm?
21:52 < stefanha> chenwj: I will still be active in QEMU
21:52  * zwu :)
21:52 < Wanpeng> but where you go?
21:52 < chenwj> nareshbhat: yes
21:52 < zwu> Wanpeng: redhat
21:52 < Wanpeng> cool~
21:53 < chenwj> nareshbhat: it means kernel will schedule qemu-arm between cpu #1 and cpu #0
21:53 < Wanpeng> it's a good choice
21:53 < chenwj> stefanha: good news. ya
21:54 < zwu> chenwj: why is it one good news, not bad one?
21:54 < chenwj> zwu: is he still involved in qemu?
21:54 < chenwj> zwu: isn't it a good news?
21:55 < zwu> chenwj: but we lose one good colleague.
21:55 < stefanha> Enough gossip :)
21:55 < chenwj> :)
21:56 < bonzini> aliguori: ping
21:57 < aliguori> bonzini, pong
21:57 < bonzini> aliguori: could you enable lio (iscsi in-kernel target) in qemu-test?
21:58 < bonzini> aliguori: that would let me write qemu-tests for scsi...
21:58 < bonzini> aliguori: without having sg_* in the guest
21:58 < aliguori> bonzini, definitely, i'll work on that today
21:59 < bonzini> aliguori: cool, just enabling the kernel options is enough, i can send a patch
21:59 < bonzini> aliguori: doing the configuration can be done in qemu-tests
21:59 < aliguori> bonzini, yeah, it shouldn't be that hard
21:59 < bonzini> aliguori: yeah, it's just boring echos to sysfs
22:01 < nareshbhat> chenwj: Actually in my first question " If  I run an ARM7 binary (a simple application) on x86, can I launch multiple instances of  this
                    binary on separate x86 CPUs (physical CPUs, not virtual CPUs). " I am looking for "Physical CPUs".  Hence I cannot use taskset
22:03 < nareshbhat> any idea how should I bond with Physical CPUs ?
22:06 < chenwj> well, honestly no idea
22:07 < chenwj> can you turn off hyper-threading?
22:07 < chenwj> try numactl?
22:08 < chenwj> nareshbhat: http://publib.boulder.ibm.com/infocenter/lnxinfo/v3r0m0/index.jsp?topic=%2Fliaai%2Fhpctune%2Fcpuandmemorybinding.htm
22:08 < chenwj> nareshbhat: see --physcpubind
22:09 < nareshbhat> ok let me try
22:09 < pm215> alternatively taskset with bitmap arguments setting the processes to different phys. cpus might be good enough?
22:10 < chenwj> pm215: with hyper-threading, taskset bitmap will represent virtual cpu, I guess?
22:10 < pm215> yes, but I'm assuming you know the virtual-to-phys cpu arrangement on the hardware you're running on
22:11 < chenwj> I don't know :p look /proc/cpuinfo?
22:12 < pm215> yes, cpuinfo will tell you
22:13 < pm215> (if you know how to read it :-))
22:13 < chenwj> ya, the term is really confusing
22:13 < chenwj> nareshbhat: ^^^
22:13 < nareshbhat> :)
22:13 < pm215> but once you've established that eg cores 0 and 1 are hyperthreaded on one phys core and 2 and 3 on another, you can just taskset your
               processes to cores 0 and 2, right?
22:14 < chenwj> yes
22:14 < chenwj> nareshbhat: so read cpuinfo hard
22:15 < nareshbhat> chenwj: ok
22:15 < pm215> the 'core id' field I think is the one you want
22:15 < zwu> what is the relationship among physical cpu, core, socket, vcpu and HT?
22:16 < zwu> who can elaborate this?
22:16 < chenwj> wikipedia
22:18 < chenwj> nareshbhat: if processor 1,2 have the same physical id 0, they are on the same physical cpu. this is my understanding
22:19 < nareshbhat> my desktop machine is having 8 cores but the Physical ID is same
22:20 < chenwj> they all have "physical id 0"?
22:21 < chenwj> what's model name?
22:21 < chenwj> nareshbhat: http://www.richweb.com/cpu_info
22:22 < nareshbhat> chenwj: yes
22:22 < nareshbhat> they have same physical ID
22:23 < chenwj> nareshbhat: http://superuser.com/questions/388115/interpreting-output-of-cat-proc-cpuinfo
22:24 < pm215> "physical id" means "these cores are the same cpu socket", not "these are logical cores using hyperthreading on one real core"
22:24 < chenwj> I am wrong
22:26 < zwu> it seems that wikipedia doesn't help you correctly.:)
22:27 < chenwj> I haven't read it yet :p
22:27 < nareshbhat> heh
22:38 < chenwj> on my machine, "cpu cores : 4" means it has 4 cores. "siblings : 8" means each core has two hyper-threading
22:38 < chenwj> I guess you can think cpu #0 and cpu #1 are on the same code
22:38 < chenwj> s/code/core
22:39 < pm215> same 'core id' == same physical core
22:41 < nareshbhat> yes, I want to try on a machine which is having two physical processors like Intel Green City (having 2 Xeon processors)
